(function() {
    var type_impls = Object.fromEntries([["sequencer",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-StakeTable%3CK1,+K2,+F%3E\" class=\"impl\"><a href=\"#impl-Clone-for-StakeTable%3CK1,+K2,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K1, K2, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for StakeTable&lt;K1, K2, F&gt;<div class=\"where\">where\n    K1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + ToFields&lt;F&gt;,\n    K2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + ToFields&lt;F&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + RescueParameter,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; StakeTable&lt;K1, K2, F&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sequencer::StakeTableVecBased"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-StakeTable%3CK1,+K2,+F%3E\" class=\"impl\"><a href=\"#impl-Debug-for-StakeTable%3CK1,+K2,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K1, K2, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for StakeTable&lt;K1, K2, F&gt;<div class=\"where\">where\n    K1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + ToFields&lt;F&gt;,\n    K2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + ToFields&lt;F&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + RescueParameter,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sequencer::StakeTableVecBased"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-StakeTable%3CK1,+K2,+F%3E\" class=\"impl\"><a href=\"#impl-Default-for-StakeTable%3CK1,+K2,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K1, K2, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for StakeTable&lt;K1, K2, F&gt;<div class=\"where\">where\n    K1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + ToFields&lt;F&gt;,\n    K2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + ToFields&lt;F&gt;,\n    F: RescueParameter,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; StakeTable&lt;K1, K2, F&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","sequencer::StakeTableVecBased"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-StakeTable%3CK1,+K2,+F%3E\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-StakeTable%3CK1,+K2,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, K1, K2, F&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for StakeTable&lt;K1, K2, F&gt;<div class=\"where\">where\n    K1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + ToFields&lt;F&gt; + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    K2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + ToFields&lt;F&gt; + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    F: RescueParameter + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(\n    __deserializer: __D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;StakeTable&lt;K1, K2, F&gt;, &lt;__D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","sequencer::StakeTableVecBased"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-StakeTable%3CK1,+K2,+F%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-StakeTable%3CK1,+K2,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K1, K2, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for StakeTable&lt;K1, K2, F&gt;<div class=\"where\">where\n    K1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + ToFields&lt;F&gt;,\n    K2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + ToFields&lt;F&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + RescueParameter,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;StakeTable&lt;K1, K2, F&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","sequencer::StakeTableVecBased"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-StakeTable%3CK1,+K2,+F%3E\" class=\"impl\"><a href=\"#impl-Serialize-for-StakeTable%3CK1,+K2,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K1, K2, F&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for StakeTable&lt;K1, K2, F&gt;<div class=\"where\">where\n    K1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + ToFields&lt;F&gt; + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    K2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + ToFields&lt;F&gt; + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    F: RescueParameter + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(\n    &amp;self,\n    __serializer: __S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","sequencer::StakeTableVecBased"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StakeTable%3CK1,+K2,+F%3E\" class=\"impl\"><a href=\"#impl-StakeTable%3CK1,+K2,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K1, K2, F&gt; StakeTable&lt;K1, K2, F&gt;<div class=\"where\">where\n    K1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + ToFields&lt;F&gt;,\n    K2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + ToFields&lt;F&gt;,\n    F: RescueParameter,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>) -&gt; StakeTable&lt;K1, K2, F&gt;</h4></section></summary><div class=\"docblock\"><p>Initiating an empty stake table.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>If unable to evaluate a preimage</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.advance\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">advance</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Update the stake table when the epoch number advances, should be manually called.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_value\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_value</a>(\n    &amp;mut self,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;K1</a>,\n    value: Uint&lt;256, 4&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Uint&lt;256, 4&gt;, StakeTableError&gt;</h4></section></summary><div class=\"docblock\"><p>Set the stake withheld by <code>key</code> to be <code>value</code>.\nReturn the previous stake if succeed.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>Errors if key is not in the stake table</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.voting_state\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">voting_state</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;GenericStakeTableState&lt;F&gt;, StakeTableError&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the stake table state used for voting</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_voting_state\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">next_voting_state</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;GenericStakeTableState&lt;F&gt;, StakeTableError&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the stake table state used for voting in the next epoch</p>\n</div></details></div></details>",0,"sequencer::StakeTableVecBased"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StakeTableScheme-for-StakeTable%3CK1,+K2,+F%3E\" class=\"impl\"><a href=\"#impl-StakeTableScheme-for-StakeTable%3CK1,+K2,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K1, K2, F&gt; StakeTableScheme for StakeTable&lt;K1, K2, F&gt;<div class=\"where\">where\n    K1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + ToFields&lt;F&gt;,\n    K2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + ToFields&lt;F&gt;,\n    F: RescueParameter,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Key\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Key\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Key</a> = K1</h4></section></summary><div class=\"docblock\"><p>The stake table is indexed by BLS key</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Aux\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Aux\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Aux</a> = K2</h4></section></summary><div class=\"docblock\"><p>The auxiliary information is the associated Schnorr key</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Amount\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Amount\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Amount</a> = Uint&lt;256, 4&gt;</h4></section></summary><div class='docblock'>type for the staked amount</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Commitment\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Commitment\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Commitment</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(F, F, F)</a></h4></section></summary><div class='docblock'>type for the commitment to the current stake table</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.LookupProof\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.LookupProof\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">LookupProof</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>type for the proof associated with the lookup result (if any)</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">IntoIter</a> = &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(K1, Uint&lt;256, 4&gt;, K2)&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>type for the iterator over (key, value) entries</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register\" class=\"method trait-impl\"><a href=\"#method.register\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">register</a>(\n    &amp;mut self,\n    new_key: &lt;StakeTable&lt;K1, K2, F&gt; as StakeTableScheme&gt;::Key,\n    amount: &lt;StakeTable&lt;K1, K2, F&gt; as StakeTableScheme&gt;::Amount,\n    aux: &lt;StakeTable&lt;K1, K2, F&gt; as StakeTableScheme&gt;::Aux,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, StakeTableError&gt;</h4></section></summary><div class='docblock'>Register a new key into the stake table. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deregister\" class=\"method trait-impl\"><a href=\"#method.deregister\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">deregister</a>(\n    &amp;mut self,\n    existing_key: &amp;&lt;StakeTable&lt;K1, K2, F&gt; as StakeTableScheme&gt;::Key,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, StakeTableError&gt;</h4></section></summary><div class='docblock'>Deregister an existing key from the stake table.\nReturns error if some keys are not found. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.commitment\" class=\"method trait-impl\"><a href=\"#method.commitment\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">commitment</a>(\n    &amp;self,\n    version: SnapshotVersion,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;StakeTable&lt;K1, K2, F&gt; as StakeTableScheme&gt;::Commitment, StakeTableError&gt;</h4></section></summary><div class='docblock'>Returns the commitment to the <code>version</code> of stake table. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.total_stake\" class=\"method trait-impl\"><a href=\"#method.total_stake\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">total_stake</a>(\n    &amp;self,\n    version: SnapshotVersion,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;StakeTable&lt;K1, K2, F&gt; as StakeTableScheme&gt;::Amount, StakeTableError&gt;</h4></section></summary><div class='docblock'>Returns the accumulated stakes of all registered keys of the <code>version</code>\nof stake table. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method trait-impl\"><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">len</a>(&amp;self, version: SnapshotVersion) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>, StakeTableError&gt;</h4></section></summary><div class='docblock'>Returns the number of keys in the <code>version</code> of the table. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method trait-impl\"><a href=\"#method.contains_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">contains_key</a>(\n    &amp;self,\n    key: &amp;&lt;StakeTable&lt;K1, K2, F&gt; as StakeTableScheme&gt;::Key,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if <code>key</code> is currently registered, else returns false.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup\" class=\"method trait-impl\"><a href=\"#method.lookup\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lookup</a>(\n    &amp;self,\n    version: SnapshotVersion,\n    key: &amp;&lt;StakeTable&lt;K1, K2, F&gt; as StakeTableScheme&gt;::Key,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;StakeTable&lt;K1, K2, F&gt; as StakeTableScheme&gt;::Amount, StakeTableError&gt;</h4></section></summary><div class='docblock'>Returns the stakes withhelded by a public key. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_with_proof\" class=\"method trait-impl\"><a href=\"#method.lookup_with_proof\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lookup_with_proof</a>(\n    &amp;self,\n    version: SnapshotVersion,\n    key: &amp;&lt;StakeTable&lt;K1, K2, F&gt; as StakeTableScheme&gt;::Key,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&lt;StakeTable&lt;K1, K2, F&gt; as StakeTableScheme&gt;::Amount, &lt;StakeTable&lt;K1, K2, F&gt; as StakeTableScheme&gt;::LookupProof), StakeTableError&gt;</h4></section></summary><div class='docblock'>Returns the stakes withhelded by a public key along with a membership proof. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_with_aux_and_proof\" class=\"method trait-impl\"><a href=\"#method.lookup_with_aux_and_proof\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lookup_with_aux_and_proof</a>(\n    &amp;self,\n    version: SnapshotVersion,\n    key: &amp;&lt;StakeTable&lt;K1, K2, F&gt; as StakeTableScheme&gt;::Key,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&lt;StakeTable&lt;K1, K2, F&gt; as StakeTableScheme&gt;::Amount, &lt;StakeTable&lt;K1, K2, F&gt; as StakeTableScheme&gt;::Aux, &lt;StakeTable&lt;K1, K2, F&gt; as StakeTableScheme&gt;::LookupProof), StakeTableError&gt;</h4></section></summary><div class='docblock'>Return the associated stake amount and auxiliary information of a public key,\nalong with a membership proof. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update\" class=\"method trait-impl\"><a href=\"#method.update\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">update</a>(\n    &amp;mut self,\n    key: &amp;&lt;StakeTable&lt;K1, K2, F&gt; as StakeTableScheme&gt;::Key,\n    delta: &lt;StakeTable&lt;K1, K2, F&gt; as StakeTableScheme&gt;::Amount,\n    negative: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;StakeTable&lt;K1, K2, F&gt; as StakeTableScheme&gt;::Amount, StakeTableError&gt;</h4></section></summary><div class='docblock'>Update the stake of the <code>key</code> with <code>(negative ? -1 : 1) * delta</code>.\nReturn the updated stake or error. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sample\" class=\"method trait-impl\"><a href=\"#method.sample\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sample</a>(\n    &amp;self,\n    rng: &amp;mut (impl <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.SeedableRng.html\" title=\"trait rand_core::SeedableRng\">SeedableRng</a> + <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.CryptoRngCore.html\" title=\"trait rand_core::CryptoRngCore\">CryptoRngCore</a>),\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;&lt;StakeTable&lt;K1, K2, F&gt; as StakeTableScheme&gt;::Key, &amp;&lt;StakeTable&lt;K1, K2, F&gt; as StakeTableScheme&gt;::Amount)&gt;</h4></section></summary><div class='docblock'>Randomly sample a (key, stake amount) pair proportional to the stake distributions,\ngiven a fixed seed for <code>rng</code>, this sampling should be deterministic.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_iter\" class=\"method trait-impl\"><a href=\"#method.try_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">try_iter</a>(\n    &amp;self,\n    version: SnapshotVersion,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;StakeTable&lt;K1, K2, F&gt; as StakeTableScheme&gt;::IntoIter, StakeTableError&gt;</h4></section></summary><div class='docblock'>Returns an iterator over all (key, value) entries of the <code>version</code> of the table <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.batch_register\" class=\"method trait-impl\"><a href=\"#method.batch_register\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">batch_register</a>&lt;I, J, K&gt;(\n    &amp;mut self,\n    new_keys: I,\n    amounts: J,\n    auxs: K,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, StakeTableError&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = Self::Key&gt;,\n    J: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = Self::Amount&gt;,\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = Self::Aux&gt;,</div></h4></section></summary><div class='docblock'>Batch register a list of new keys. A default implementation is provided\nw/o batch optimization. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.batch_deregister\" class=\"method trait-impl\"><a href=\"#method.batch_deregister\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">batch_deregister</a>&lt;'a, I&gt;(\n    &amp;mut self,\n    existing_keys: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, StakeTableError&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = &amp;'a Self::Key&gt;,\n    Self::Key: 'a,</div></h4></section></summary><div class='docblock'>Batch deregister a list of keys. A default implementation is provided\nw/o batch optimization. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.batch_update\" class=\"method trait-impl\"><a href=\"#method.batch_update\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">batch_update</a>(\n    &amp;mut self,\n    keys: &amp;[Self::Key],\n    amounts: &amp;[Self::Amount],\n    negative_flags: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Self::Amount&gt;, StakeTableError&gt;</h4></section></summary><div class='docblock'>Batch update the stake balance of <code>keys</code>. Read documentation about\n[<code>Self::update()</code>]. By default, we call <code>Self::update()</code> on each\n(key, amount, negative) tuple. <a>Read more</a></div></details></div></details>","StakeTableScheme","sequencer::StakeTableVecBased"],["<section id=\"impl-Eq-for-StakeTable%3CK1,+K2,+F%3E\" class=\"impl\"><a href=\"#impl-Eq-for-StakeTable%3CK1,+K2,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K1, K2, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for StakeTable&lt;K1, K2, F&gt;<div class=\"where\">where\n    K1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + ToFields&lt;F&gt;,\n    K2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + ToFields&lt;F&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + RescueParameter,</div></h3></section>","Eq","sequencer::StakeTableVecBased"],["<section id=\"impl-StructuralPartialEq-for-StakeTable%3CK1,+K2,+F%3E\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-StakeTable%3CK1,+K2,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K1, K2, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for StakeTable&lt;K1, K2, F&gt;<div class=\"where\">where\n    K1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + ToFields&lt;F&gt;,\n    K2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + ToFields&lt;F&gt;,\n    F: RescueParameter,</div></h3></section>","StructuralPartialEq","sequencer::StakeTableVecBased"]]],["staking_cli",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-StakeTable%3CK1,+K2,+F%3E\" class=\"impl\"><a href=\"#impl-Clone-for-StakeTable%3CK1,+K2,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K1, K2, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for StakeTable&lt;K1, K2, F&gt;<div class=\"where\">where\n    K1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + ToFields&lt;F&gt;,\n    K2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + ToFields&lt;F&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + RescueParameter,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; StakeTable&lt;K1, K2, F&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","staking_cli::demo::StakeTableVecBased"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-StakeTable%3CK1,+K2,+F%3E\" class=\"impl\"><a href=\"#impl-Debug-for-StakeTable%3CK1,+K2,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K1, K2, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for StakeTable&lt;K1, K2, F&gt;<div class=\"where\">where\n    K1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + ToFields&lt;F&gt;,\n    K2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + ToFields&lt;F&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + RescueParameter,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","staking_cli::demo::StakeTableVecBased"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-StakeTable%3CK1,+K2,+F%3E\" class=\"impl\"><a href=\"#impl-Default-for-StakeTable%3CK1,+K2,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K1, K2, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for StakeTable&lt;K1, K2, F&gt;<div class=\"where\">where\n    K1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + ToFields&lt;F&gt;,\n    K2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + ToFields&lt;F&gt;,\n    F: RescueParameter,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; StakeTable&lt;K1, K2, F&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","staking_cli::demo::StakeTableVecBased"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-StakeTable%3CK1,+K2,+F%3E\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-StakeTable%3CK1,+K2,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, K1, K2, F&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for StakeTable&lt;K1, K2, F&gt;<div class=\"where\">where\n    K1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + ToFields&lt;F&gt; + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    K2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + ToFields&lt;F&gt; + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    F: RescueParameter + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(\n    __deserializer: __D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;StakeTable&lt;K1, K2, F&gt;, &lt;__D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","staking_cli::demo::StakeTableVecBased"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-StakeTable%3CK1,+K2,+F%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-StakeTable%3CK1,+K2,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K1, K2, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for StakeTable&lt;K1, K2, F&gt;<div class=\"where\">where\n    K1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + ToFields&lt;F&gt;,\n    K2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + ToFields&lt;F&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + RescueParameter,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;StakeTable&lt;K1, K2, F&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","staking_cli::demo::StakeTableVecBased"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-StakeTable%3CK1,+K2,+F%3E\" class=\"impl\"><a href=\"#impl-Serialize-for-StakeTable%3CK1,+K2,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K1, K2, F&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for StakeTable&lt;K1, K2, F&gt;<div class=\"where\">where\n    K1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + ToFields&lt;F&gt; + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    K2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + ToFields&lt;F&gt; + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    F: RescueParameter + <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(\n    &amp;self,\n    __serializer: __S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","staking_cli::demo::StakeTableVecBased"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StakeTable%3CK1,+K2,+F%3E\" class=\"impl\"><a href=\"#impl-StakeTable%3CK1,+K2,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K1, K2, F&gt; StakeTable&lt;K1, K2, F&gt;<div class=\"where\">where\n    K1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + ToFields&lt;F&gt;,\n    K2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + ToFields&lt;F&gt;,\n    F: RescueParameter,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>(capacity: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>) -&gt; StakeTable&lt;K1, K2, F&gt;</h4></section></summary><div class=\"docblock\"><p>Initiating an empty stake table.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>If unable to evaluate a preimage</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.advance\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">advance</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Update the stake table when the epoch number advances, should be manually called.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_value\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_value</a>(\n    &amp;mut self,\n    key: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;K1</a>,\n    value: Uint&lt;256, 4&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Uint&lt;256, 4&gt;, <a class=\"enum\" href=\"hotshot_types/traits/stake_table/enum.StakeTableError.html\" title=\"enum hotshot_types::traits::stake_table::StakeTableError\">StakeTableError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Set the stake withheld by <code>key</code> to be <code>value</code>.\nReturn the previous stake if succeed.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>Errors if key is not in the stake table</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.voting_state\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">voting_state</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"hotshot_types/light_client/struct.GenericStakeTableState.html\" title=\"struct hotshot_types::light_client::GenericStakeTableState\">GenericStakeTableState</a>&lt;F&gt;, <a class=\"enum\" href=\"hotshot_types/traits/stake_table/enum.StakeTableError.html\" title=\"enum hotshot_types::traits::stake_table::StakeTableError\">StakeTableError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the stake table state used for voting</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_voting_state\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">next_voting_state</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"hotshot_types/light_client/struct.GenericStakeTableState.html\" title=\"struct hotshot_types::light_client::GenericStakeTableState\">GenericStakeTableState</a>&lt;F&gt;, <a class=\"enum\" href=\"hotshot_types/traits/stake_table/enum.StakeTableError.html\" title=\"enum hotshot_types::traits::stake_table::StakeTableError\">StakeTableError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the stake table state used for voting in the next epoch</p>\n</div></details></div></details>",0,"staking_cli::demo::StakeTableVecBased"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StakeTableScheme-for-StakeTable%3CK1,+K2,+F%3E\" class=\"impl\"><a href=\"#impl-StakeTableScheme-for-StakeTable%3CK1,+K2,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K1, K2, F&gt; <a class=\"trait\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html\" title=\"trait hotshot_types::traits::stake_table::StakeTableScheme\">StakeTableScheme</a> for StakeTable&lt;K1, K2, F&gt;<div class=\"where\">where\n    K1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + ToFields&lt;F&gt;,\n    K2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + ToFields&lt;F&gt;,\n    F: RescueParameter,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Key\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Key\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Key\" class=\"associatedtype\">Key</a> = K1</h4></section></summary><div class=\"docblock\"><p>The stake table is indexed by BLS key</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Aux\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Aux\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Aux\" class=\"associatedtype\">Aux</a> = K2</h4></section></summary><div class=\"docblock\"><p>The auxiliary information is the associated Schnorr key</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Amount\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Amount\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Amount\" class=\"associatedtype\">Amount</a> = Uint&lt;256, 4&gt;</h4></section></summary><div class='docblock'>type for the staked amount</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Commitment\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Commitment\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Commitment\" class=\"associatedtype\">Commitment</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(F, F, F)</a></h4></section></summary><div class='docblock'>type for the commitment to the current stake table</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.LookupProof\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.LookupProof\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.LookupProof\" class=\"associatedtype\">LookupProof</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>type for the proof associated with the lookup result (if any)</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = &lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(K1, Uint&lt;256, 4&gt;, K2)&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>type for the iterator over (key, value) entries</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.register\" class=\"method trait-impl\"><a href=\"#method.register\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#tymethod.register\" class=\"fn\">register</a>(\n    &amp;mut self,\n    new_key: &lt;StakeTable&lt;K1, K2, F&gt; as <a class=\"trait\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html\" title=\"trait hotshot_types::traits::stake_table::StakeTableScheme\">StakeTableScheme</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Key\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Key\">Key</a>,\n    amount: &lt;StakeTable&lt;K1, K2, F&gt; as <a class=\"trait\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html\" title=\"trait hotshot_types::traits::stake_table::StakeTableScheme\">StakeTableScheme</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Amount\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Amount\">Amount</a>,\n    aux: &lt;StakeTable&lt;K1, K2, F&gt; as <a class=\"trait\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html\" title=\"trait hotshot_types::traits::stake_table::StakeTableScheme\">StakeTableScheme</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Aux\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Aux\">Aux</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"hotshot_types/traits/stake_table/enum.StakeTableError.html\" title=\"enum hotshot_types::traits::stake_table::StakeTableError\">StakeTableError</a>&gt;</h4></section></summary><div class='docblock'>Register a new key into the stake table. <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#tymethod.register\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deregister\" class=\"method trait-impl\"><a href=\"#method.deregister\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#tymethod.deregister\" class=\"fn\">deregister</a>(\n    &amp;mut self,\n    existing_key: &amp;&lt;StakeTable&lt;K1, K2, F&gt; as <a class=\"trait\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html\" title=\"trait hotshot_types::traits::stake_table::StakeTableScheme\">StakeTableScheme</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Key\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Key\">Key</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"hotshot_types/traits/stake_table/enum.StakeTableError.html\" title=\"enum hotshot_types::traits::stake_table::StakeTableError\">StakeTableError</a>&gt;</h4></section></summary><div class='docblock'>Deregister an existing key from the stake table.\nReturns error if some keys are not found. <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#tymethod.deregister\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.commitment\" class=\"method trait-impl\"><a href=\"#method.commitment\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#tymethod.commitment\" class=\"fn\">commitment</a>(\n    &amp;self,\n    version: <a class=\"enum\" href=\"hotshot_types/traits/stake_table/enum.SnapshotVersion.html\" title=\"enum hotshot_types::traits::stake_table::SnapshotVersion\">SnapshotVersion</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;StakeTable&lt;K1, K2, F&gt; as <a class=\"trait\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html\" title=\"trait hotshot_types::traits::stake_table::StakeTableScheme\">StakeTableScheme</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Commitment\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Commitment\">Commitment</a>, <a class=\"enum\" href=\"hotshot_types/traits/stake_table/enum.StakeTableError.html\" title=\"enum hotshot_types::traits::stake_table::StakeTableError\">StakeTableError</a>&gt;</h4></section></summary><div class='docblock'>Returns the commitment to the <code>version</code> of stake table. <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#tymethod.commitment\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.total_stake\" class=\"method trait-impl\"><a href=\"#method.total_stake\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#tymethod.total_stake\" class=\"fn\">total_stake</a>(\n    &amp;self,\n    version: <a class=\"enum\" href=\"hotshot_types/traits/stake_table/enum.SnapshotVersion.html\" title=\"enum hotshot_types::traits::stake_table::SnapshotVersion\">SnapshotVersion</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;StakeTable&lt;K1, K2, F&gt; as <a class=\"trait\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html\" title=\"trait hotshot_types::traits::stake_table::StakeTableScheme\">StakeTableScheme</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Amount\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Amount\">Amount</a>, <a class=\"enum\" href=\"hotshot_types/traits/stake_table/enum.StakeTableError.html\" title=\"enum hotshot_types::traits::stake_table::StakeTableError\">StakeTableError</a>&gt;</h4></section></summary><div class='docblock'>Returns the accumulated stakes of all registered keys of the <code>version</code>\nof stake table. <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#tymethod.total_stake\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method trait-impl\"><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#tymethod.len\" class=\"fn\">len</a>(&amp;self, version: <a class=\"enum\" href=\"hotshot_types/traits/stake_table/enum.SnapshotVersion.html\" title=\"enum hotshot_types::traits::stake_table::SnapshotVersion\">SnapshotVersion</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"hotshot_types/traits/stake_table/enum.StakeTableError.html\" title=\"enum hotshot_types::traits::stake_table::StakeTableError\">StakeTableError</a>&gt;</h4></section></summary><div class='docblock'>Returns the number of keys in the <code>version</code> of the table. <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#tymethod.len\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_key\" class=\"method trait-impl\"><a href=\"#method.contains_key\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#tymethod.contains_key\" class=\"fn\">contains_key</a>(\n    &amp;self,\n    key: &amp;&lt;StakeTable&lt;K1, K2, F&gt; as <a class=\"trait\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html\" title=\"trait hotshot_types::traits::stake_table::StakeTableScheme\">StakeTableScheme</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Key\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Key\">Key</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns true if <code>key</code> is currently registered, else returns false.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup\" class=\"method trait-impl\"><a href=\"#method.lookup\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#tymethod.lookup\" class=\"fn\">lookup</a>(\n    &amp;self,\n    version: <a class=\"enum\" href=\"hotshot_types/traits/stake_table/enum.SnapshotVersion.html\" title=\"enum hotshot_types::traits::stake_table::SnapshotVersion\">SnapshotVersion</a>,\n    key: &amp;&lt;StakeTable&lt;K1, K2, F&gt; as <a class=\"trait\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html\" title=\"trait hotshot_types::traits::stake_table::StakeTableScheme\">StakeTableScheme</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Key\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Key\">Key</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;StakeTable&lt;K1, K2, F&gt; as <a class=\"trait\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html\" title=\"trait hotshot_types::traits::stake_table::StakeTableScheme\">StakeTableScheme</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Amount\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Amount\">Amount</a>, <a class=\"enum\" href=\"hotshot_types/traits/stake_table/enum.StakeTableError.html\" title=\"enum hotshot_types::traits::stake_table::StakeTableError\">StakeTableError</a>&gt;</h4></section></summary><div class='docblock'>Returns the stakes withhelded by a public key. <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#tymethod.lookup\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_with_proof\" class=\"method trait-impl\"><a href=\"#method.lookup_with_proof\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#tymethod.lookup_with_proof\" class=\"fn\">lookup_with_proof</a>(\n    &amp;self,\n    version: <a class=\"enum\" href=\"hotshot_types/traits/stake_table/enum.SnapshotVersion.html\" title=\"enum hotshot_types::traits::stake_table::SnapshotVersion\">SnapshotVersion</a>,\n    key: &amp;&lt;StakeTable&lt;K1, K2, F&gt; as <a class=\"trait\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html\" title=\"trait hotshot_types::traits::stake_table::StakeTableScheme\">StakeTableScheme</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Key\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Key\">Key</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&lt;StakeTable&lt;K1, K2, F&gt; as <a class=\"trait\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html\" title=\"trait hotshot_types::traits::stake_table::StakeTableScheme\">StakeTableScheme</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Amount\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Amount\">Amount</a>, &lt;StakeTable&lt;K1, K2, F&gt; as <a class=\"trait\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html\" title=\"trait hotshot_types::traits::stake_table::StakeTableScheme\">StakeTableScheme</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.LookupProof\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::LookupProof\">LookupProof</a>), <a class=\"enum\" href=\"hotshot_types/traits/stake_table/enum.StakeTableError.html\" title=\"enum hotshot_types::traits::stake_table::StakeTableError\">StakeTableError</a>&gt;</h4></section></summary><div class='docblock'>Returns the stakes withhelded by a public key along with a membership proof. <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#tymethod.lookup_with_proof\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lookup_with_aux_and_proof\" class=\"method trait-impl\"><a href=\"#method.lookup_with_aux_and_proof\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#tymethod.lookup_with_aux_and_proof\" class=\"fn\">lookup_with_aux_and_proof</a>(\n    &amp;self,\n    version: <a class=\"enum\" href=\"hotshot_types/traits/stake_table/enum.SnapshotVersion.html\" title=\"enum hotshot_types::traits::stake_table::SnapshotVersion\">SnapshotVersion</a>,\n    key: &amp;&lt;StakeTable&lt;K1, K2, F&gt; as <a class=\"trait\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html\" title=\"trait hotshot_types::traits::stake_table::StakeTableScheme\">StakeTableScheme</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Key\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Key\">Key</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(&lt;StakeTable&lt;K1, K2, F&gt; as <a class=\"trait\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html\" title=\"trait hotshot_types::traits::stake_table::StakeTableScheme\">StakeTableScheme</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Amount\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Amount\">Amount</a>, &lt;StakeTable&lt;K1, K2, F&gt; as <a class=\"trait\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html\" title=\"trait hotshot_types::traits::stake_table::StakeTableScheme\">StakeTableScheme</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Aux\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Aux\">Aux</a>, &lt;StakeTable&lt;K1, K2, F&gt; as <a class=\"trait\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html\" title=\"trait hotshot_types::traits::stake_table::StakeTableScheme\">StakeTableScheme</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.LookupProof\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::LookupProof\">LookupProof</a>), <a class=\"enum\" href=\"hotshot_types/traits/stake_table/enum.StakeTableError.html\" title=\"enum hotshot_types::traits::stake_table::StakeTableError\">StakeTableError</a>&gt;</h4></section></summary><div class='docblock'>Return the associated stake amount and auxiliary information of a public key,\nalong with a membership proof. <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#tymethod.lookup_with_aux_and_proof\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update\" class=\"method trait-impl\"><a href=\"#method.update\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#tymethod.update\" class=\"fn\">update</a>(\n    &amp;mut self,\n    key: &amp;&lt;StakeTable&lt;K1, K2, F&gt; as <a class=\"trait\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html\" title=\"trait hotshot_types::traits::stake_table::StakeTableScheme\">StakeTableScheme</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Key\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Key\">Key</a>,\n    delta: &lt;StakeTable&lt;K1, K2, F&gt; as <a class=\"trait\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html\" title=\"trait hotshot_types::traits::stake_table::StakeTableScheme\">StakeTableScheme</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Amount\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Amount\">Amount</a>,\n    negative: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;StakeTable&lt;K1, K2, F&gt; as <a class=\"trait\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html\" title=\"trait hotshot_types::traits::stake_table::StakeTableScheme\">StakeTableScheme</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Amount\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Amount\">Amount</a>, <a class=\"enum\" href=\"hotshot_types/traits/stake_table/enum.StakeTableError.html\" title=\"enum hotshot_types::traits::stake_table::StakeTableError\">StakeTableError</a>&gt;</h4></section></summary><div class='docblock'>Update the stake of the <code>key</code> with <code>(negative ? -1 : 1) * delta</code>.\nReturn the updated stake or error. <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#tymethod.update\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sample\" class=\"method trait-impl\"><a href=\"#method.sample\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#tymethod.sample\" class=\"fn\">sample</a>(\n    &amp;self,\n    rng: &amp;mut (impl <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.SeedableRng.html\" title=\"trait rand_core::SeedableRng\">SeedableRng</a> + <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.CryptoRngCore.html\" title=\"trait rand_core::CryptoRngCore\">CryptoRngCore</a>),\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;&lt;StakeTable&lt;K1, K2, F&gt; as <a class=\"trait\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html\" title=\"trait hotshot_types::traits::stake_table::StakeTableScheme\">StakeTableScheme</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Key\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Key\">Key</a>, &amp;&lt;StakeTable&lt;K1, K2, F&gt; as <a class=\"trait\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html\" title=\"trait hotshot_types::traits::stake_table::StakeTableScheme\">StakeTableScheme</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Amount\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Amount\">Amount</a>)&gt;</h4></section></summary><div class='docblock'>Randomly sample a (key, stake amount) pair proportional to the stake distributions,\ngiven a fixed seed for <code>rng</code>, this sampling should be deterministic.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_iter\" class=\"method trait-impl\"><a href=\"#method.try_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#tymethod.try_iter\" class=\"fn\">try_iter</a>(\n    &amp;self,\n    version: <a class=\"enum\" href=\"hotshot_types/traits/stake_table/enum.SnapshotVersion.html\" title=\"enum hotshot_types::traits::stake_table::SnapshotVersion\">SnapshotVersion</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;StakeTable&lt;K1, K2, F&gt; as <a class=\"trait\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html\" title=\"trait hotshot_types::traits::stake_table::StakeTableScheme\">StakeTableScheme</a>&gt;::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.IntoIter\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::IntoIter\">IntoIter</a>, <a class=\"enum\" href=\"hotshot_types/traits/stake_table/enum.StakeTableError.html\" title=\"enum hotshot_types::traits::stake_table::StakeTableError\">StakeTableError</a>&gt;</h4></section></summary><div class='docblock'>Returns an iterator over all (key, value) entries of the <code>version</code> of the table <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#tymethod.try_iter\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.batch_register\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot_types/traits/stake_table.rs.html#59-68\">Source</a><a href=\"#method.batch_register\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#method.batch_register\" class=\"fn\">batch_register</a>&lt;I, J, K&gt;(\n    &amp;mut self,\n    new_keys: I,\n    amounts: J,\n    auxs: K,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"hotshot_types/traits/stake_table/enum.StakeTableError.html\" title=\"enum hotshot_types::traits::stake_table::StakeTableError\">StakeTableError</a>&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Key\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Key\">Key</a>&gt;,\n    J: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Amount\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Amount\">Amount</a>&gt;,\n    K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = Self::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Aux\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Aux\">Aux</a>&gt;,</div></h4></section></summary><div class='docblock'>Batch register a list of new keys. A default implementation is provided\nw/o batch optimization. <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#method.batch_register\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.batch_deregister\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot_types/traits/stake_table.rs.html#90-93\">Source</a><a href=\"#method.batch_deregister\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#method.batch_deregister\" class=\"fn\">batch_deregister</a>&lt;'a, I&gt;(\n    &amp;mut self,\n    existing_keys: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"hotshot_types/traits/stake_table/enum.StakeTableError.html\" title=\"enum hotshot_types::traits::stake_table::StakeTableError\">StakeTableError</a>&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = &amp;'a Self::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Key\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Key\">Key</a>&gt;,\n    Self::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Key\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Key\">Key</a>: 'a,</div></h4></section></summary><div class='docblock'>Batch deregister a list of keys. A default implementation is provided\nw/o batch optimization. <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#method.batch_deregister\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.batch_update\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hotshot_types/traits/stake_table.rs.html#173-178\">Source</a><a href=\"#method.batch_update\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#method.batch_update\" class=\"fn\">batch_update</a>(\n    &amp;mut self,\n    keys: &amp;[Self::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Key\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Key\">Key</a>],\n    amounts: &amp;[Self::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Amount\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Amount\">Amount</a>],\n    negative_flags: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Self::<a class=\"associatedtype\" href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#associatedtype.Amount\" title=\"type hotshot_types::traits::stake_table::StakeTableScheme::Amount\">Amount</a>&gt;, <a class=\"enum\" href=\"hotshot_types/traits/stake_table/enum.StakeTableError.html\" title=\"enum hotshot_types::traits::stake_table::StakeTableError\">StakeTableError</a>&gt;</h4></section></summary><div class='docblock'>Batch update the stake balance of <code>keys</code>. Read documentation about\n<a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#tymethod.update\" title=\"method hotshot_types::traits::stake_table::StakeTableScheme::update::update\"><code>Self::update()</code></a>. By default, we call <code>Self::update()</code> on each\n(key, amount, negative) tuple. <a href=\"hotshot_types/traits/stake_table/trait.StakeTableScheme.html#method.batch_update\">Read more</a></div></details></div></details>","StakeTableScheme","staking_cli::demo::StakeTableVecBased"],["<section id=\"impl-Eq-for-StakeTable%3CK1,+K2,+F%3E\" class=\"impl\"><a href=\"#impl-Eq-for-StakeTable%3CK1,+K2,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K1, K2, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for StakeTable&lt;K1, K2, F&gt;<div class=\"where\">where\n    K1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + ToFields&lt;F&gt;,\n    K2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + ToFields&lt;F&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + RescueParameter,</div></h3></section>","Eq","staking_cli::demo::StakeTableVecBased"],["<section id=\"impl-StructuralPartialEq-for-StakeTable%3CK1,+K2,+F%3E\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-StakeTable%3CK1,+K2,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;K1, K2, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for StakeTable&lt;K1, K2, F&gt;<div class=\"where\">where\n    K1: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + ToFields&lt;F&gt;,\n    K2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + ToFields&lt;F&gt;,\n    F: RescueParameter,</div></h3></section>","StructuralPartialEq","staking_cli::demo::StakeTableVecBased"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[43713,60968]}