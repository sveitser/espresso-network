(function() {
    var type_impls = Object.fromEntries([["hotshot_types",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-KeyPair\" class=\"impl\"><a href=\"#impl-Clone-for-KeyPair\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for KeyPair</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; KeyPair</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","hotshot_types::signature_key::BLSKeyPair"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-KeyPair\" class=\"impl\"><a href=\"#impl-Debug-for-KeyPair\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for KeyPair</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","hotshot_types::signature_key::BLSKeyPair"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSignKey%3E-for-KeyPair\" class=\"impl\"><a href=\"#impl-From%3CSignKey%3E-for-KeyPair\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;SignKey&gt; for KeyPair</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(sk: SignKey) -&gt; KeyPair</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SignKey>","hotshot_types::signature_key::BLSKeyPair"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-KeyPair\" class=\"impl\"><a href=\"#impl-KeyPair\" class=\"anchor\">§</a><h3 class=\"code-header\">impl KeyPair</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.generate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">generate</a>&lt;R&gt;(prng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut R</a>) -&gt; KeyPair<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.CryptoRng.html\" title=\"trait rand_core::CryptoRng\">CryptoRng</a> + <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a>,</div></h4></section></summary><div class=\"docblock\"><p>Key-pair generation algorithm</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.generate_with_sign_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">generate_with_sign_key</a>(sk: Fp&lt;MontBackend&lt;FrConfig, 4&gt;, 4&gt;) -&gt; KeyPair</h4></section></summary><div class=\"docblock\"><p>Key pair generation using a particular sign key secret <code>sk</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ver_key_ref\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">ver_key_ref</a>(&amp;self) -&gt; &amp;VerKey</h4></section></summary><div class=\"docblock\"><p>Get reference to verification key</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ver_key\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">ver_key</a>(&amp;self) -&gt; VerKey</h4></section></summary><div class=\"docblock\"><p>Get the verification key</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sign_key_internal\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">sign_key_internal</a>(&amp;self) -&gt; &amp;Fp&lt;MontBackend&lt;FrConfig, 4&gt;, 4&gt;</h4></section></summary><div class=\"docblock\"><p>Get the internal of the signing key, namely a P::ScalarField element</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sign_key_ref\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">sign_key_ref</a>(&amp;self) -&gt; &amp;SignKey</h4></section></summary><div class=\"docblock\"><p>Get the signing key reference</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sign\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">sign</a>&lt;B&gt;(&amp;self, msg: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>], csid: B) -&gt; Signature<div class=\"where\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Signature function</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_bytes</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Explicit calls to serialize a <code>KeyPair</code> into bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bytes\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_bytes</a>(bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]) -&gt; KeyPair</h4></section></summary><div class=\"docblock\"><p>Deserialize <code>KeyPair</code> from bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_tagged_base64\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_tagged_base64</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;TaggedBase64, Tb64Error&gt;</h4></section></summary><div class=\"docblock\"><p>Explicit calls to serialize a <code>KeyPair</code> into <code>TaggedBase64</code>.</p>\n</div></details></div></details>",0,"hotshot_types::signature_key::BLSKeyPair"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-KeyPair\" class=\"impl\"><a href=\"#impl-PartialEq-for-KeyPair\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for KeyPair</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;KeyPair) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","hotshot_types::signature_key::BLSKeyPair"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26TaggedBase64%3E-for-KeyPair\" class=\"impl\"><a href=\"#impl-TryFrom%3C%26TaggedBase64%3E-for-KeyPair\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a TaggedBase64&gt; for KeyPair</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Tb64Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    tb: &amp;'a TaggedBase64,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;KeyPair, &lt;KeyPair as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a TaggedBase64&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&'a TaggedBase64>","hotshot_types::signature_key::BLSKeyPair"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CTaggedBase64%3E-for-KeyPair\" class=\"impl\"><a href=\"#impl-TryFrom%3CTaggedBase64%3E-for-KeyPair\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;TaggedBase64&gt; for KeyPair</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = Tb64Error</h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    tb: TaggedBase64,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;KeyPair, &lt;KeyPair as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;TaggedBase64&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<TaggedBase64>","hotshot_types::signature_key::BLSKeyPair"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroize-for-KeyPair\" class=\"impl\"><a href=\"#impl-Zeroize-for-KeyPair\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Zeroize for KeyPair</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroize\" class=\"method trait-impl\"><a href=\"#method.zeroize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroize</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Zero out this object from memory using Rust intrinsics which ensure the\nzeroization operation is not “optimized away” by the compiler.</div></details></div></details>","Zeroize","hotshot_types::signature_key::BLSKeyPair"],["<section id=\"impl-Eq-for-KeyPair\" class=\"impl\"><a href=\"#impl-Eq-for-KeyPair\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for KeyPair</h3></section>","Eq","hotshot_types::signature_key::BLSKeyPair"],["<section id=\"impl-StructuralPartialEq-for-KeyPair\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-KeyPair\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for KeyPair</h3></section>","StructuralPartialEq","hotshot_types::signature_key::BLSKeyPair"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[16771]}