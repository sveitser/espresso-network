searchState.loadedDescShard("espresso_contract_deployer", 0, "An identifier for a particular contract.\nCache of contracts predeployed or deployed during this …\nSet of predeployed contracts.\nType alias that connects to providers with recommended …\n<code>stateHistoryRetentionPeriod</code> in LightClient.sol as the …\na handy thin wrapper around wallet builder and provider …\nsimilar to <code>build_provider()</code> but using a random wallet\nbuilder pattern for\nDeploy a contract (with logging and cached deployments)\nThe primary logic for deploying and initializing an …\nDefault deployment function <code>LightClient.sol</code> or …\nThe primary logic for deploying and initializing an …\nThe primary logic for deploying and initializing an …\nDeploy and initialize a Timelock contract\nThe primary logic for deploying and initializing an …\nUse an already-deployed EspToken.sol instead of deploying …\nUse an already-deployed EspToken.sol proxy instead of …\nUse an already-deployed FeeContract.sol instead of …\nUse an already-deployed FeeContract.sol proxy instead of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nhelper function to decide if the contract at given address …\nUse an already-deployed LightClient.sol instead of …\nUse an already-deployed LightClient.sol proxy instead of …\nLightClientV2.sol\nFetching hotshot network config\nUse an already-deployed PlonkVerifier.sol instead of …\nPlonkVerifierV2.sol\nUse an already-deployed StakeTable.sol instead of …\nUse an already-deployed StakeTable.sol proxy instead of …\nTimelock.sol\nCommon logic for any Ownable contract to transfer ownership\nUpgrade the light client proxy to use LightClientV2. …\nWrite a .env file.\nConvenient handler that builds all the input arguments …\nBuilder for <code>DeployerArgs</code>.\nError type for DeployerArgsBuilder\nUninitialized field\nCustom validation error\nBuilds a new <code>DeployerArgs</code>.\nCreate an empty builder, with all fields set to <code>None</code> or …\ndeploy target contracts\nDeploy all contracts\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the epoch-related  from the sequencer’s …\nFetch the stake table from a sequencer node given the …\nReturns both genesis light client state and stake table …\nderive the genesis light client state and stake table …")