searchState.loadedDescShard("staking_cli", 0, "Print the signer account address.\nApprove stake table contract to move tokens\nClaim withdrawal after validator exit.\nClaim withdrawal after an undelegation.\nCLI to interact with the Espresso stake table contract\nDisplay the current configuration\nDelegate funds to a validator.\nDeregister a validator.\nInitialize the config file with deployment and wallet info.\nRemove the config file.\nRegister to become a validator.\nRegister the validators and delegates for the local demo.\nShow the stake table in the Espresso stake table contract.\nCheck ESP token allowance of stake table contract.\nCheck ESP token balance.\nTransfer ESP tokens\nInitiate a withdrawal of delegated funds from a validator.\nUpdate a validators Espresso consensus signing keys.\nDisplay version information of the staking-cli.\nThe mnemonic account index to use when deriving the key.\nCreate default Config\nCreate default SignerConfig\nReturns the argument unchanged.\nCreate new object from &amp;mut Opt.\nCreate new object from Opt.\nCreate new object from Opt.\nCreate new object from &amp;mut Opt.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUse a ledger device to sign transactions.\nThe mnemonic to use when deriving the key.\nL1 Ethereum RPC.\nDeployed stake table contract address.\nDeployed ESP token contract address.\nThe mnemonic account index to use when deriving the key.\nThe address to check.\nThe amount to transfer\nThe commission to charge delegators\nAbbreviate the very long BLS public keys.\nThe consensus signing key. Used to sign a message to prove …\nThe consensus signing key. Used to sign a message to prove …\nDon’t ask for confirmation.\nThe block numberto use for the stake table.\nThe ledger account index to use when deriving the key.\nThe mnemonic to use when deriving the key.\nThe number of validators to register.\nThe address to check.\nThe state signing key.\nThe state signing key.\nThe address to transfer to.\nCommonly used contract deployment routine.\nRegister validators, and delegate to themselves for demo …\nInject test system config into CLI command via arguments\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nParse a percentage string into a <code>Percentage</code> type.")